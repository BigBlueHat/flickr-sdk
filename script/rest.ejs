/**
 * Copyright 2017 Yahoo Holdings.
 * Licensed under the terms of the MIT license. Please see LICENSE file in the project root for terms.
 */

var request = require('../lib/request');
var validate = require('../lib/validate');
var json = require('../plugins/json');

/**
 * Creates a new Flickr API client. This "client" is a factory
 * method that creates a new superagent request pre-configured
 * for talking to the Flickr API. You must pass an "auth"
 * supergent plugin.
 * @param {Function} auth
 * @returns {Function}
 * @see https://github.com/visionmedia/superagent
 */

function createClient(auth, opts) {
	var host;

	if (typeof auth !== 'function') {
		throw new Error('Missing auth superagent plugin');
	}

	// options
	opts = opts || {};
	host = opts.host || 'api.flickr.com';

	return function (verb, method, args) {
		if (typeof args === 'undefined') {
			args = {};
		}

		// the API expects the "extras" param to be a
		// comma-separated list, so if we are given an
		// array we should join it
		if (Array.isArray(args.extras)) {
			args.extras = args.extras.join(',');
		}

		return request(verb, 'https://' + host + '/services/rest')
			.query('method=' + method)
			.query(args)
			.set('X-Flickr-API-Method', method)
			.use(json)
			.use(auth);
	};

}

/**
 * Creates a new Flickr REST API client.
 *
 * You **must** pass an authentication plugin as the first parameter.
 * If you're using OAuth, we have a [convenience method][#TODO]
 * to create a plugin function.
 *
 * ``` js
 * var flickr = new Flickr(req => req.query({
 *   api_key: process.env.FLICKR_API_KEY
 * }));
 * ```
 *
 * @constructor
 * @param {Function} auth
 * @api public
 */

function Flickr(auth, opts) {

	// allow creating a client without `new`
	if (!(this instanceof Flickr)) {
		return new Flickr(auth);
	}

	// create a new client and assign it to all of our namespaces
	<%_ namespaces.forEach(function (ns) { _%>
	this.<%= ns %>._ =
	<%_ }); _%>
	this._ = // create passthrough for future/undocumented endpoints
		createClient(auth, opts);
}

<% namespaces.forEach(function (ns) { %>
/**
 * @namespace flickr.<%= ns %>
 */

Flickr.prototype.<%= ns %> = {};
<% getMethodsByNamespace(ns).forEach(function (method) { %>
/**
 * <%= method %>
 * @see https://www.flickr.com/services/api/<%= method %>.html
 */

Flickr.prototype.<%= ns %>.<%= basename(method) %> = function (args) {
	<%_ getRequiredArguments(method).forEach(function (arg) { _%>
	validate(args, '<%= arg %>');
	<%_ }); _%>
	return this._('<%= getHTTPVerb(method) %>', '<%= method %>', args);
};
<%_ }); _%>
<% }); %>

/**
 * @exports
 */

module.exports = Flickr;
